[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "odin-control"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
description = "ODIN detector control system"
dynamic = ["version"]
readme = "README.md"
license.file = "LICENSE"
authors = [
    {name = "Tim Nicholls", email = "tim.nicholls@stfc.ac.uk"},
]

dependencies = [
    "tornado>=4.3",
    "future",
    "pyzmq>=17.1.0",
    "psutil>=5.0"
]

[project.optional-dependencies]
dev = [
    "requests",
    "tox",
    "pytest-asyncio<0.23",
    "pytest-cov",
]
sync_proxy = [
    "requests"
]
graylog = [
    "pygelf"
]

[project.scripts]
odin_control = "odin.main:main"
odin_server = "odin.main:main_deprecate"

[project.urls]
GitHub = "https://github.com/odin-detector/odin-control"

[tool.setuptools_scm]
version_file = "src/odin/_version.py"

[tool.coverage.paths]
source = ["src", "**/site-packages/"]

[tool.pytest.ini_options]
addopts = "-vv --cov=odin --cov-report=term-missing --asyncio-mode=strict"

[tool.tox]
legacy_tox_ini = """
# tox test configuration for odin-control

[tox]
envlist = clean,py{38,39,310,311,312},py{38}-pygelf,report

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
deps =
    pytest
    pytest-cov
    pytest-asyncio<0.23
    requests
    py38: pygelf
setenv =
    py{38,39,310,311,312}: COVERAGE_FILE=.coverage.{envname}
commands =
    pytest --cov=odin --cov-report=term-missing --asyncio-mode=strict {posargs:-vv}
depends =
    py{38,39,310,311,312}: clean
    report: py{38,39,310,311,312}

[testenv:clean]
skip_install = true
deps = coverage
commands = coverage erase

[testenv:report]
skip_install = true
deps = coverage
commands =
    coverage combine
    coverage report -m
"""
